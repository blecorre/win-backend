openapi: 3.0.3
info:
  title: LPMS-server api
  description: lpms server api with auth
  version: 0.0.1
components:
  securitySchemes:
    bearerAuth:
      type: 'http'
      scheme: 'bearer'
      bearerFormat: 'JWT'

servers:
  - url: http://localhost:5000/api
    description: local server

paths:
  #users
  /user/login:
    post:
      summary: get access token
      tags: [Auth service]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - login
                - password
              properties:
                login:
                  type: string
                  description: user's login
                password:
                  type: string
                  description: user's password
      responses:
        200:
          description: It's ok
        400:
          description: Handled Error
        500:
          description: Some server error

  /user/refresh:
    post:
      summary: refresh access token
      tags: [Auth service]
      responses:
        200:
          description: It's ok
        400:
          description: Handled Error
        500:
          description: Some server error

  /user/get-all:
    get:
      summary: get all users
      tags: [Auth service]
      responses:
        200:
          description: get all users
        401:
          description: User is not Auth

  /user/create:
    post:
      security:
        - bearerAuth: []
      summary: create a new user (only for manager role)
      tags: [Auth service]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - login
                - password
                - roles
              properties:
                login:
                  type: string
                  description: user's login
                password:
                  type: string
                  description: user's password
                roles:
                  type: array
                  minItems: 1
                  items:
                    type: string
                    enum: [manager, staff]
                  description: roles (staff, manager)
      responses:
        200:
          description: It's ok
        400:
          description: Handled Error
        401:
          description: User is not Auth
        403:
          description: Access denied
        500:
          description: Some server error

  /user/update-password:
    put:
      security:
        - bearerAuth: []
      summary: update password
      tags: [Auth service]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - password
              properties:
                userId:
                  type: string
                  description: user's id
                password:
                  type: string
                  description: new user password
      responses:
        200:
          description: It's ok
        400:
          description: Handled Error
        401:
          description: User is not Auth
        403:
          description: Access denied
        500:
          description: Some server error

  /user/update-roles:
    put:
      security:
        - bearerAuth: []
      summary: update role (only for manager role)
      tags: [Auth service]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - roles
              properties:
                userId:
                  type: string
                  description: user's id
                roles:
                  type: array
                  minItems: 1
                  items:
                    type: string
                    enum: [manager, staff]
                  description: roles (staff, manager)
      responses:
        200:
          description: It's ok
        400:
          description: Handled Error
        401:
          description: User is not Auth
        403:
          description: Access denied
        500:
          description: Some server error
  /user:
    delete:
      security:
        - bearerAuth: []
      summary: delete user (only for manager role)
      tags: [Auth service]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
              properties:
                userId:
                  type: string
                  description: user's id
      responses:
        200:
          description: It's ok
        400:
          description: Handled Error
        401:
          description: User is not Auth
        403:
          description: Access denied
        500:
          description: Some server error

  /user/logout:
    post:
      security:
        - bearerAuth: []
      summary: logout
      tags: [Auth service]
      responses:
        200:
          description: It's ok
        400:
          description: Handled Error
        401:
          description: User is not Auth
        500:
          description: Some server error
  #end users

  #proxy
  /derby_soft/hotels:
    get:
      responses:
        200:
          description: It's ok
        400:
          description: Handled Error
        401:
          description: User is not Auth
        500:
          description: Some server error

  /derby_soft/hotels/search:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - rectangle
              properties:
                rectangle:
                  type: object
                  required:
                    - south
                    - west
                    - north
                    - east
                  properties:
                    south:
                      type: number
                    west:
                      type: number
                    north:
                      type: number
                    east:
                      type: number
      responses:
        200:
          description: It's ok
        400:
          description: Handled Error
        401:
          description: User is not Auth
        500:
          description: Some server error
  #end proxy
